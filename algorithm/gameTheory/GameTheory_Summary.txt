1. [Alice and Bob's Silly Game]
   The idea is straightforward - count the [Prime Number] with range of N.
   Use Sieve algorithm to quickly flag [Prime Numbers].
   
2. [bob And Ben]   
   After learn [Sprague-Grundy Theorem], [Nimbers and Mex] from [GeeksforGeeks], I can complete this task.
   https://www.geeksforgeeks.org/combinatorial-game-theory-set-3-grundy-numbersnimbers-and-mex/
   
3. [Game of Stones]
   Easy, use iterative idea, starts from known results and accumulate to the final result.

4. [Mis√®re Nim]
   Read discussion to solve the task.
   (1). If player 1 starts with an xor value of zero, player 1 loses unless the piles are: [1,1], [1,1,1,1], etc.
   (2). If player 1 starts with an xor value other than zero, player 1 wins unless the piles are: [1], [1,1,1], etc.

5. [Nimble Game]
   Read discussion to solve the task.
   (1). The ith square has i squares (0 1 2 .... i-1) before it, so for each coin in current square you actually has i ways to move, so it's like having i stones in a standard nim    
        game. The coins aren't the stones in the Nim's term. The slots before the current square are.
   (2). The number of coins in each square is just a flag, if initially some square has even number of coins, no matter what the first player did, all the changes can be cancel out 
        by putting all rest of the coins in current square (will be an odd number) to the same set of squares the first player put onto.
		
6. [A Chessboard Game]		
   I have figured out all the flow of code, with the help from discussion, I corrected logic for 2 if condition clause and then complete the task. 
   
7. [Chocolate in Box]
   Straightforward, just use the idea of classic Nim Game (remove stones from piles) to find how many moving ways for first player to win.

8. [Powers Game]
   Key points:
   (1). Since both players play optimally and player 2 plays after player 1, therefore player 2
        must be able to make his play works with previous player 1 play - the combination 
        of their step won't affect the final result;
   (2) 17 = 16 + 1 = 32 + 2 = 2^5 + 2^1, for every number player 1 choose find the other one
       that could make the equation still works, then we find the number of series must be times of 8.   
	   
9. [Play on benders]	   
   Key points: 
       (1). Written in C# so as to use its profiler to identify the bottleneck. 
	        A single line change decrease time from 9 seconds to 0 second.
	   
	        Before: IEnumerable<int> nextLocations = paths.Where(p => p[0] == location).Select(p => p[1]);
	        After:  IEnumerable<int> nextLocations = parent2Children[location];
	   (2). Implement a iterative program flow does help me to locate the bottleneck; however the recursive way can't because it calls itself.

10. [Chessboard Game, Again]
    Use [Sprague Grundy Theorem] to solve the problem, first calculate the Grundy Number for every 
	cell in the grid, then calculate the accumulated XOR result of all the input coins, return result 
    based on the XOR result is 0 or not.

11. [Permutation game]
    Solution 1: After read discussion, implement a recursive way to solve the task.
	Solution 2: The source code from Editorial is more concise, but not easy to digest and understand.
	
12. [Tower Breakers, Revisited]
    This is actually a [Game of Nim], the [coins number] of each pile is [count of divisors] for each input number, like 6 has 2 [2,3], 8 has 3 [2,2,2]
	
13. [Tower Breakers, Again!]
    Based on the idea from discussion, key points:
    (1). Find [odd] divisors of number and save them into array;
	(2). When original number is odd, then the k (value of Nim Game) will be above array length,
	     when original number is even, then the k (value of Nim Game) will be above array length plus 1.
		 
14. [Fun Game]
    Based on the idea from discussion: 
	1. Create an array, has property a:a[i], b:b[i], index:index, 
       then order the array in descending order by its a[i]+b[i] value.
	2. In each turn, find the first one (not chosen before) from above ordered array, 
	   add its a or b value to sumA or sumB based on current turn is for a or for b.
	   
15. [Deforestation]
     Based on the link given by cbuff :cool link to understand hackenbush and colon principle
     http://math450games.blogspot.com/2017/02/green-hackenbush.html
     We can use the Colon Principle to find the position of a game consisting of trees.
     Colon Principle: When several stalks meet at a vertex we may replace those stalks by a single stalk of the value 
	 equal to their sum.
	 
16. [Zero-Move Nim]	 
    Based on the idea from Discussion, 
	Use the idea from Discussion -> find the [Nim Number] value of a specific pile 
	The key point is divide [Nim Number] formula into 2 groups:
	Group one is the normal one we are familar with: zero move has been used, we have below formula
	GN1[0]= 0, GN1[1]= 1, ..., GN1[n]= n 
  
	Group two is the special case: zero move has not used, we have below formula
	GN2[0]= 0 
	GN2[1] = mex{GN2[0], GN1[1]}= mex{0,1}= 2
	GN2[2] = mex{GN2[1], GN2[0], GN1[2]}= mex{2, 0, 2}= 1
	By continue calculating GN2[3] and GN2[4], we can find the formula is different for odd number and even number.
	
17. [New Year Game]
    Just map the original array to its residual value (%3), then reduce the array to its XOR aggregation result, then decide 
	which player wins based on the XOR result equals 0 or not.


    	   
    		 
    	
    
	
   